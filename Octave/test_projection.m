0;1;close allclearclc# This is an integrated example that comprises# source "./geometry_helpers_3d.m"# camera matrixglobal K=[180,0,320;	  0, 180,240;	  0, 0, 1];    global cam_transform = [0, 0, 1, 0.2; -1, 0, 0, 0; 0, -1, 0, 0; 0, 0, 0, 1];# image_sizeglobal image_rows=480;global image_cols=640;################################## TRAJECTORY ##################################datFile = '../dataset/trajectory.dat';[a, id, xg, yg, tg, x, y, t] = textread (datFile, "%s %d %f %f %f %f %f %f");num_poses = id(end)+1;XR_true=zeros(4,4,num_poses);XR_guess=zeros(4,4,num_poses);u = [0; 0; 0; 0; 0; 0];ug = [0; 0; 0; 0; 0; 0];for (pose_num=1:num_poses)    u = [x(pose_num); y(pose_num); 0; t(pose_num); 0; 0] - u;    Xr=v2t(u);    XR_true(:,:,pose_num)=Xr;        ug = [xg(pose_num); yg(pose_num); 0; tg(pose_num); 0; 0] - ug;    Xrg=v2t(ug);    XR_guess(:,:,pose_num)=Xrg;endfor;################################## LANDMARKS ###################################datFile = '../dataset/world.dat';[id, x, y, z, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10] = textread (datFile, "%d %f %f %f %f %f %f %f %f %f %f %f %f %f");num_landmarks = id(end)+1;# landmarks in a matrix, one per columnXL_true=[x'; y'; z'];##########################################measurement_num=1;for (pose_num=1:num_poses)    Xr=XR_true(:,:,pose_num);    for (landmark_num=1:num_landmarks)      Xl=XL_true(:,landmark_num)            iXr=inv(cam_transform) * inv(Xr);      p_img=[-1;-1];      pw=iXr(1:3,1:3)*Xl+iXr(1:3,4)      if !(pw(3)<0)        p_cam=K*pw;        iz=1./p_cam(3);        p_cam*=iz        if !(p_cam(1)<0 || p_cam(1)>image_cols || p_cam(2)<0 || p_cam(2)>image_rows)          p_img=p_cam(1:2);        endif;      endif;            if (p_img(1)>0)        projection_associations(:,measurement_num)=[pose_num, landmark_num]';        Zp(:,measurement_num)=z_img;        measurement_num++;      endif;    endfor;endfor